name: Docker CI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/todo-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Create directory if it doesn't exist
            mkdir -p /home/ubuntu/todo-app
            
            # Copy docker-compose.yml to the server
            cat > /home/ubuntu/todo-app/docker-compose.yml << 'EOL'
            version: '3.8'
            services:
              app:
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/todo-app:latest
                ports:
                  - "8080:8080"
                environment:
                  - DB_HOST=db
                  - DB_PORT=5432
                  - DB_USER=postgres
                  - DB_PASSWORD=0629
                  - DB_NAME=simple_blog
                depends_on:
                  - db
                networks:
                  - todo-network

              db:
                image: postgres:15-alpine
                environment:
                  - POSTGRES_USER=postgres
                  - POSTGRES_PASSWORD=0629
                  - POSTGRES_DB=simple_blog
                ports:
                  - "5432:5432"
                volumes:
                  - postgres_data:/var/lib/postgresql/data
                networks:
                  - todo-network

            networks:
              todo-network:
                driver: bridge

            volumes:
              postgres_data:
            EOL

            # Navigate to the application directory
            cd /home/ubuntu/todo-app
            
            # Pull the latest image and restart containers
            docker-compose pull app
            docker-compose down
            docker-compose up -d 